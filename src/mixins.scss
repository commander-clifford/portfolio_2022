@function hexToRGB($hex) {
  @return red($hex), green($hex), blue($hex);
}

@function hsl-to-rgb($hsl-color) {
    @return mix($hsl-color,$hsl-color);
}

// @mixin primary-gradient($color) {
//   $thisColor: $color;
//   background-attachment: fixed;
//   background-color: $thisColor;
//   background-image:
//     linear-gradient(217deg, hsl(20°, 100%, 40%), transparent 80%),
//     linear-gradient(127deg, $thisColor, transparent 80%),
//     linear-gradient(336deg, hsl(340°, 100%, 40%), transparent 80%);
// }

@mixin rounded(){
  // padding: var(--radius-4);
  border-radius: var(--radius-3);
}
@mixin primary-gradient(){
  background-attachment: fixed;
  background-color: var(--red-600);
  background-image: var(--primary-gradient);
}

:root {
  --clip-size: var(--primary-gap);
}

@mixin upper-clip($up) {
  $percentage: unquote("%");
  clip-path: polygon( 0 0, 100% 0%, 100% calc(100% - #{$up}), 0% 100% );
  // clip-path: polygon(100% 0%, 100% calc(100% - var(--clip-size)), 50% 100%, 0 calc(100% - var(--clip-size)), 0% 50%, 0 0);
  clip-path: polygon(0 0, 0% var(--clip-size), 0 100%, calc(100% - var(--clip-size)) 100%, 100% calc(100% - var(--clip-size)), 100% 0);
  clip-path: polygon(var(--clip-size) 0%, 0% var(--clip-size), 0 100%, calc(100% - var(--clip-size)) 100%, 100% calc(100% - var(--clip-size)), 100% 0);
  // padding: var(--clip-size) 0 calc(var(--clip-size)*2);
  box-shadow: var(--shadow-4);

  clip-path: polygon(0% var(--clip-size), var(--clip-size) 0%, 100% 0, 100% calc(100% - (var(--clip-size)*2)), calc(100% - var(--clip-size)) calc(100% - var(--clip-size)), var(--clip-size) calc(100% - var(--clip-size)), 0 100%);
}
@mixin lower-clip($down) {
  $percentage: unquote("%");
  padding: var(--clip-size);
  // clip-path: polygon( 0 #{$down}, 100% 0, 100% 100%, 0% 100% );
  // clip-path: polygon(50% var(--clip-size), 100% 0, 100% 100%, 0 100%, 0 0);
  clip-path: polygon(var(--clip-size) 0%, 0% var(--clip-size), 0 100%, 100% 100%, 100% 100%, 100% 0);
  clip-path: polygon(var(--clip-size) 0%, 0% var(--clip-size), 0 100%, calc(100% - var(--clip-size)) 100%, 100% calc(100% - var(--clip-size)), 100% 0);
  box-shadow: var(--shadow-4);
}
@mixin dual-clip($amount) {
  $percentage: unquote("%");
  // clip-path: polygon( 0 #{$amount}, 100% 0, 100% calc(100% - #{$amount}), 0% 100% );
  // clip-path: polygon(50% var(--clip-size), 100% 0, 100% 100%, 0 100%, 0 0);
  padding: var(--clip-size);
  box-shadow: var(--shadow-4);
  clip-path: polygon(var(--clip-size) 0%, 0% var(--clip-size), 0 100%, calc(100% - var(--clip-size)) 100%, 100% calc(100% - var(--clip-size)), 100% 0);
}
@mixin dog-ear-clip($amount) {
  $percentage: unquote("%");
  // clip-path: polygon( 0 #{$amount}, 100% 0, 100% calc(100% - #{$amount}), 0% 100% );
  // clip-path: polygon(50% var(--clip-size), 100% 0, 100% 100%, 0 100%, 0 0);
  padding: calc(var(--clip-size)*2) var(--clip-size) var(--clip-size);
  box-shadow: var(--shadow-4);
  // clip-path: polygon(var(--clip-size) 0%, 0% var(--clip-size), 0 100%, calc(100% - var(--clip-size)) 100%, 100% calc(100% - var(--clip-size)), 100% 0);
  // clip-path: polygon(var(--clip-size) 0%, 0% var(--clip-size), calc(100% - var(--clip-size)) var(--clip-size), 100% 0, 100% calc(100% - var(--clip-size)), calc(100% - var(--clip-size)) 100%, 0 100%);

  clip-path: polygon(0 calc(var(--clip-size)*2), var(--clip-size) var(--clip-size), calc(100% - var(--clip-size)) var(--clip-size), 100% 0, 100% calc(100% - var(--clip-size)), calc(100% - var(--clip-size)) 100%, 0 100%);

}

@mixin blurry() {
  background-color: hsl(210, 17%, 98%);
  @supports (filter: blur(0)) {
    background-color: hsla(210, 17%, 98%, 0.96);
    backdrop-filter: blur(4px) brightness(1.1);  
  }
}
@mixin notBlurry() {
  background-color: transparent;
  backdrop-filter: blur(0);
}

@mixin headline-decoration($alignment: 'center') {
  position: relative;
  display: inline-block;

  &::before,
  &::after {
    content: '';
    position: absolute;
    top: 50%;
    width: 2em;
    height: 1px;
    background-color: currentColor;
  }

  &::before { 
    right: calc(100% + 0.5em);
    content: if($alignment == 'left', none, '');
  }

  &::after { 
    left: calc(100% + 0.5em); 
    content: if($alignment == 'right', none, '');
  }
}
